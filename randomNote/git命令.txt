
-- 本地Git和GitHub通信所需的配置 --
-- 下面所有操作均在控制台终端 --
1. 
    git config --global user.name "你的用户名"
    git config --global user.email "你的邮箱"

2. 生成SSH密钥
    为了通过SSH与GitHub通信，你需要生成一个SSH密钥对。
    输入以下命令来生成新的SSH密钥（如果你已经有了密钥，可以跳过这一步）：
    ssh-keygen -t ed25519 -C "你的邮箱"
    按照提示操作，你可以选择保存密钥的路径（建议使用默认路径）。完成后，你会得到一个公钥和私钥。
    Enter file in which to save the key (/Users/xcyy/.ssh/id_ed25519): 

3. 添加SSH密钥到ssh-agent
    为了使SSH密钥可用，你需要将其添加到ssh-agent中：
    eval "$(ssh-agent -s)"
    ssh-add ~/.ssh/id_ed25519

4. 将SSH密钥添加到GitHub
    在GitHub上，点击右上角的头像，选择“Settings”。
    在左侧菜单中选择“SSH and GPG keys”。
    点击“New SSH key”或“Add SSH key”。
    将之前生成的公钥（通常在~/.ssh/id_ed25519.pub）内容复制到输入框中。
    添加标题（例如“My GitHub Key”）并点击“Add SSH key”。
    测试: ssh -T git@github.com
    
5. 配置Git以使用HTTPS或SSH（可选）
    虽然我们通常使用SSH密钥认证，但有时你可能需要使用HTTPS。你可以通过以下命令切换：
    git config --global url."https://github.com/".insteadOf git@github.com:
    
6. 克隆仓库（可选）
    如果你想克隆一个GitHub上的仓库到本地，可以使用以下命令：
    git clone git@github.com:用户名/仓库名.git  # 使用SSH方式
    git clone https://github.com/用户名/仓库名.git  # 或者使用HTTPS方式：
    
完成上述步骤后，你就可以开始使用Git与GitHub进行交互了。如果你在过程中遇到任何问题，检查网络连接、确保GitHub账户和邮箱正确无误，以及SSH密钥是否正确添加。


-- 常用命令 --
git status     查看待提交文件列表
git restore --staged < 文件名 >    从待提交文件列表中移除
git commit -m '提交说明'   提交
git push  推送至远程